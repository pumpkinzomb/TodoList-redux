{"version":3,"sources":["components/TodoListTemplate.js","components/Palette.js","components/Form.js","components/TodoItem.js","components/RealignmentItem.js","components/TodoItemList.js","actions/constants.js","container.js","actions/index.js","App.js","store/reducers.js","store/index.js","index.js"],"names":["TodoListTemplate","_this$props","this","props","form","children","react_default","a","createElement","className","Component","Color","_ref","color","onColor","selected","concat","onClick","e","stopPropagation","Palette","_ref2","_ref2$colors","colors","input","_ref2$onEdit","onEdit","f","text","bolded","formState","id","map","Palette_Color","key","src","alt","AddForm","onChange","submit","_inputText","onSubmit","ref","EditForm","_ref3","Form","_ref$onEdit","_ref$onAdd","onAdd","_ref$onEditSubmit","onEditSubmit","_ref$form","_ref$lists","lists","_ref$realignmentMode","realignmentMode","_ref$input","checked","_ref$onRealignMode","onRealignMode","target","value","preventDefault","length","addId","focus","setTimeout","modeState","components_Palette","Form_AddForm","Form_EditForm","TodoItem","_ref$text","_ref$bolded","_ref$checked","_ref$color","_ref$id","_ref$onAddList","onAddList","_ref$onEditList","onEditList","_ref$onCheckToggle","onCheckToggle","_ref$onRemoveList","onRemoveList","RealignmentItem","_ref$onRealign_Fid","onRealign_Fid","_ref$onRealignList","onRealignList","r_checked","fId","lId","TodoItemList","list","components_TodoItem","Object","assign","components_RealignmentItem","constants","EDIT_INPUT","ADD_LIST","CHECK_TOGGLE_LIST","EDIT_LIST","REMOVE_LIST","REALIGN_LIST","ADD_STATE","EDIT_STATE","REALIGN_MODE","REALIGN_GET_FID","InputForm","connect","state","dispatch","type","C","editInput","timestamp","Date","toString","addList","editList","realignMode","TodoLists","toConsumableArray","sort","b","editState","removeList","checkToggle","realignLists_getFid","realignList","App","components_TodoListTemplate","arguments","undefined","action","objectSpread","update","$push","todo","filter","i","getFirst","findIndex","getLast","selectFrom","newList","splice","logger","store","next","console","groupCollapsed","log","getState","result","groupEnd","saver","localStorage","JSON","stringify","initialState","stateData","applyMiddleware","createStore","combineReducers","parse","storeFactory","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.55a07c33.chunk.js","sourcesContent":["import React,{ Component } from \"react\";\r\nimport \"./css/TodoListTemplate.css\"\r\n\r\nclass TodoListTemplate extends Component{\r\n    render(){\r\n        const {form,children} = this.props;\r\n        return(\r\n            <main className=\"todo-list-template\">\r\n                <div className=\"title\">\r\n                    오늘 할 일\r\n                </div>\r\n                <section className=\"form-wrapper\">\r\n                    { form }\r\n                </section>\r\n                <section className=\"todos-wrapper\">\r\n                    { children }\r\n                </section>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTemplate;","import React from \"react\";\r\nimport \"./css/Palette.css\"\r\n\r\nconst Color = ({color, onColor ,selected}) => {\r\n    return (\r\n        <span \r\n            className={`palette-${color} color ${selected===color? \"active\" :\"\"}`} \r\n            onClick={(e)=>{\r\n                e.stopPropagation();\r\n                onColor(color);\r\n            }}></span>\r\n    );\r\n}\r\n\r\nconst Palette = ({\r\n    colors=[\r\n        \"color1\", //#343a40\r\n        \"color2\", //#f03e3e\r\n        \"color3\", //#12b886\r\n        \"color4\" //#228ae6\r\n    ], \r\n    input,\r\n    onEdit=f=>f\r\n    }) => {    \r\n    const onBolded = () =>{\r\n        input.bolded=!input.bolded;\r\n        onEdit(input.text,input.color,input.bolded,input.formState,input.id);\r\n    }\r\n    const onColor = (color) =>{\r\n        if(input.color !== color){\r\n            input.color=color;\r\n            onEdit(input.text,input.color,input.bolded,input.formState,input.id);\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"palette\">\r\n            {\r\n            colors.map(color=>(\r\n                <Color \r\n                    key={color}\r\n                    color={color}\r\n                    selected={input.color}  \r\n                    onColor={onColor}\r\n                />  \r\n            ))\r\n            }\r\n            <div className=\"make-bold\" \r\n            onClick={(e)=>{\r\n                e.stopPropagation();\r\n                onBolded();\r\n            }}><img src=\"imgs/bold.png\" alt=\"bold 처리하기\" /></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Palette;","import React from \"react\";\r\nimport \"./css/Form.css\"\r\nimport Palette from \"./Palette\"\r\n\r\nconst Form = ({\r\n    onEdit = f=>f,\r\n    onAdd = f=>f,\r\n    onEditSubmit = f=>f,\r\n    form={},\r\n    lists={},\r\n    realignmentMode={},\r\n    input={\r\n        id:form.id,\r\n        text:form.text,\r\n        bolded:form.bolded,\r\n        color:form.color,\r\n        formState:form.formState,\r\n        checked:form.checked\r\n    },\r\n    onRealignMode=f=>f\r\n}) => {\r\n    let _inputText;\r\n    const onChange = (e) => {\r\n        input.text = e.target.value;\r\n    }\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        if(input.text.length < 1){\r\n            return;\r\n        }\r\n        if(form.formState === \"add\"){\r\n            let addId = lists.length;\r\n            onAdd(addId,input.text,input.color,input.bolded);\r\n        }else{\r\n            onEditSubmit(input.id,input.text,input.color,input.bolded,input.checked);\r\n        }\r\n        onEdit(\"\",\"color1\",false,\"add\",0);\r\n        _inputText.value = \"\";\r\n        _inputText.className = \"\";\r\n        _inputText.focus();\r\n    }\r\n    const toggleRealignMode = () =>{\r\n        onRealignMode(!realignmentMode.modeState);\r\n    }\r\n    if(form.formState === \"edit\"){\r\n        // 더 좋은방법이 생각나지 않아서 일단 이렇게 작성해 둠.\r\n        (()=>{ \r\n            setTimeout(()=>{\r\n                _inputText.value = input.text;\r\n            },1);\r\n        })()\r\n    }else{\r\n        (()=>{ \r\n            setTimeout(()=>{\r\n                _inputText.focus();\r\n            },1);\r\n        })()\r\n    }\r\n    return(\r\n        <div className=\"todo-form\">\r\n            <div className=\"palette-with-btns\">\r\n                <div className=\"sort-btn\"><img src=\"imgs/list_sort2.png\" alt=\"Rearrange list button\" onClick={toggleRealignMode} /></div>\r\n                <Palette input={input} onEdit={onEdit} />\r\n            </div>\r\n            {\r\n                form.formState === \"add\" ? \r\n                <AddForm \r\n                    onChange={onChange} \r\n                    input={input}\r\n                    submit={submit} \r\n                    _inputText={input => { _inputText = input}} /> :\r\n                <EditForm \r\n                    onChange={onChange} \r\n                    input={input}\r\n                    _inputText={input => { _inputText = input}}\r\n                    submit={submit} />\r\n            }\r\n        </div>\r\n     )\r\n}\r\n\r\nconst AddForm = ({\r\n    onChange,\r\n    submit,\r\n    input,\r\n    _inputText\r\n}) =>{\r\n    return(\r\n        <form className=\"form\" \r\n            onSubmit={submit}>\r\n            <input \r\n                onChange={onChange} \r\n                className={`${input.color} ${input.bolded ? \"bold-font\" : \"\"}`} \r\n                ref={_inputText}\r\n            />\r\n            <button className=\"create-button\">추가</button>\r\n        </form>\r\n    )\r\n};\r\nconst EditForm = ({\r\n    onChange,\r\n    input,\r\n    submit,\r\n    _inputText\r\n}) => {\r\n    return( \r\n        <form className=\"form\" onSubmit={submit}>\r\n            <input \r\n                onChange={onChange} \r\n                className={`${input.color} ${input.bolded ? \"bold-font\" : \"\"}`}\r\n                ref = {_inputText}   \r\n             />\r\n            <button className=\"edit-button\">수정</button>\r\n        </form>\r\n    )\r\n};\r\n\r\n\r\nexport default Form;","import React from \"react\";\r\nimport \"./css/TodoItem.css\";\r\n\r\nconst TodoItem = ({ \r\n    text=\"\",\r\n    bolded=false,\r\n    checked=false,\r\n    color=\"color1\",\r\n    id=-1, \r\n    form={},\r\n    onAddList=f=>f,\r\n    onEditList=f=>f,\r\n    onCheckToggle=f=>f, \r\n    onRemoveList=f=>f}) => {\r\n    return(\r\n        <div className={`todo-item ${(form.formState === \"edit\" && form.id === id) ? \"edit-item\" : \"\"}`} onClick={() => onCheckToggle(id,!checked)}>\r\n            <div className=\"remove\" onClick={(e) => {\r\n                e.stopPropagation();\r\n                onRemoveList(id);\r\n            }}> &times; </div>\r\n            <div className={`todo-text ${color} ${checked ? \"checked\" : \"\"} ${bolded ? \"bold-font\" : \"\"}`}>\r\n                <div>{ text }</div>\r\n            </div>\r\n            {\r\n                checked && (<div className=\"check-mark\">&#x2713;</div>) //checked가 true면 우측 실행, ( 좌측이 true일 경우 )항상 우측이 반환됨\r\n            }\r\n            <div className=\"edit-btn\" onClick={(e) => {\r\n                e.stopPropagation();\r\n                form.formState === \"add\" ? onEditList(id,text,color,bolded,checked) :\r\n                    form.id === id ? onAddList() : onEditList(id,text,color,bolded,checked);\r\n            }}><img src=\"imgs/edit.png\" alt=\"edit_pecil_Image\" /></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport \"./css/RealignmentItem.css\"\r\n\r\nconst RealignmentItem = ({ \r\n    text=\"\", \r\n    id=-1, \r\n    color=\"color1\", \r\n    bolded=false, \r\n    checked=false, \r\n    realignmentMode={}, \r\n    onRealign_Fid=f=>f,\r\n    onRealignList=f=>f, }) => {\r\n    let r_checked = realignmentMode.fId === id;\r\n    const realignList = (fId,lId) =>{\r\n        if(fId!==lId){\r\n            onRealignList(fId,lId);\r\n        }\r\n        onRealign_Fid(-1);\r\n    }\r\n    return(\r\n        <div className={`realignment-item  ${r_checked ? \"r_checked\" : \"\"}`} \r\n            onClick={()=>{\r\n                realignmentMode.fId<0 ? onRealign_Fid(id) : \r\n                realignList(realignmentMode.fId,id)\r\n            }}>\r\n            <div className=\"realignment-btn\">{r_checked ? (<img src=\"imgs/realignment_checked.png\" alt=\"edit_pecil_Image\" />) : (<img src=\"imgs/realignment.png\" alt=\"edit_pecil_Image\" />) }</div>\r\n            <div className= {`realignment-text ${color} ${checked ? \"checked\" : \"\"} ${bolded ? \"bold-font\" : \"\"}`} >\r\n                <div>{ text }</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RealignmentItem;","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\"\r\nimport RealignmentItem from \"./RealignmentItem\"\r\n\r\nconst TodoItemList = ({ \r\n    form={},\r\n    lists=[],\r\n    realignmentMode={},\r\n    onEditList = f=>f, \r\n    onAddList = f=>f,\r\n    onRemoveList = f=>f, \r\n    onCheckToggle = f=>f,\r\n    onRealign_Fid = f=>f,\r\n    onRealignList = f=>f }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                lists.map(list => (\r\n                    realignmentMode.modeState === false ? \r\n                    <TodoItem \r\n                        form = {form}\r\n                        {...list}\r\n                        onRemoveList={onRemoveList}\r\n                        onAddList={onAddList}\r\n                        onEditList={onEditList}\r\n                        onCheckToggle={onCheckToggle}\r\n                        key={list.id}\r\n                    /> :\r\n                    <RealignmentItem \r\n                        {...list} \r\n                        key={list.id}\r\n                        realignmentMode={realignmentMode}\r\n                        onRealign_Fid={onRealign_Fid}\r\n                        onRealignList={onRealignList}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItemList;","const constants={\r\n    EDIT_INPUT:\"EDIT_INPUT\",\r\n    ADD_LIST:\"ADD_LIST\",\r\n    CHECK_TOGGLE_LIST:\"CHECK_TOGGLE_LIST\",\r\n    EDIT_LIST:\"EDIT_LIST\",\r\n    REMOVE_LIST:\"REMOVE_LIST\",\r\n    REALIGN_LIST:\"REALIGN_LIST\",\r\n\r\n    ADD_STATE:\"ADD_STATE\", //리스트 글쓰기모드\r\n    EDIT_STATE:\"EDIT_STATE\", //리스트 편집모드\r\n\r\n    REALIGN_MODE:\"REALIGN_MODE\", \r\n    REALIGN_GET_FID:\"REALIGN_GET_FID\",\r\n}\r\n\r\nexport default constants;","import { connect } from 'react-redux';\r\nimport Form from './components/Form';\r\nimport TodoItemList from './components/TodoItemList'\r\nimport { \r\n    editInput, \r\n    addList,\r\n    editList, \r\n    removeList, \r\n    checkToggle, \r\n    editState, \r\n    addState, \r\n    realignLists_getFid, \r\n    realignList, \r\n    realignMode } from './actions';\r\n\r\nexport const InputForm = connect(\r\n        state =>({\r\n            form:state.form,\r\n            lists:state.lists,\r\n            realignmentMode:state.realignmentMode\r\n        }),\r\n        dispatch => ({\r\n            onEdit(text,color,bolded,formState,id){\r\n                dispatch(editInput(text,color,bolded,formState,id));\r\n            },\r\n            onAdd(id,text,color,bolded){\r\n                dispatch(addList(id,text,color,bolded));\r\n            },\r\n            onEditSubmit(id,text,color,bolded,checked){\r\n                dispatch(editList(id,text,color,bolded,checked));\r\n            },\r\n            onRealignMode(modeState){\r\n                dispatch(realignMode(modeState));\r\n            }\r\n        })\r\n\r\n)(Form);\r\nexport const TodoLists = connect(\r\n        state =>({\r\n            form:state.form,\r\n            lists:[...state.lists].sort((a,b)=>{\r\n                return b[\"id\"] - a[\"id\"];\r\n            }),\r\n            realignmentMode:state.realignmentMode\r\n        }),\r\n        dispatch => ({\r\n            onEditList(id,text,color,bolded){\r\n                dispatch(editState(id,text,color,bolded))\r\n            },\r\n            onAddList(){\r\n                dispatch(addState())\r\n            },\r\n            onRemoveList(id){\r\n                dispatch(removeList(id))\r\n            },\r\n            onCheckToggle(id,checked){\r\n                dispatch(checkToggle(id,checked))\r\n            },\r\n            onRealign_Fid(fId){\r\n                dispatch(realignLists_getFid(fId))\r\n            },\r\n            onRealignList(fId,lId){\r\n                dispatch(realignList(fId,lId))\r\n            }\r\n        })\r\n)(TodoItemList);\r\n","import C from \"./constants\";\r\n\r\nexport const editInput = (text,color,bolded,formState,id) => ({\r\n    type:C.EDIT_INPUT,\r\n    text,\r\n    color, \r\n    bolded,\r\n    formState,\r\n    id\r\n})\r\n\r\nexport const addList = (id,text,color,bolded) =>({\r\n    type:C.ADD_LIST,\r\n    id,\r\n    text,\r\n    color,\r\n    bolded,\r\n    timestamp: new Date().toString()\r\n})\r\nexport const removeList = id => ({\r\n    type:C.REMOVE_LIST,\r\n    id\r\n})\r\nexport const checkToggle = (id,checked) => ({\r\n    type:C.CHECK_TOGGLE_LIST,\r\n    id,\r\n    checked\r\n})\r\nexport const editList = (id,text,color,bolded,checked) => ({\r\n    type:C.EDIT_LIST,\r\n    id,\r\n    text,\r\n    color,\r\n    bolded,\r\n    checked,\r\n    timestamp: new Date().toString()\r\n})\r\n\r\nexport const addState = () => ({\r\n    type:C.ADD_STATE\r\n})\r\nexport const editState = (id,text,color,bolded,checked) => ({\r\n    type:C.EDIT_STATE,\r\n    id,\r\n    text,\r\n    color,\r\n    bolded,\r\n    checked\r\n})\r\n\r\nexport const realignMode = (modeState) =>({\r\n    type:C.REALIGN_MODE,\r\n    modeState\r\n})\r\nexport const realignLists_getFid = (fId) =>({\r\n    type:C.REALIGN_GET_FID,\r\n    fId\r\n})\r\nexport const realignList = (fId,lId) =>({\r\n    type:C.REALIGN_LIST,\r\n    fId,\r\n    lId\r\n})\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport TodoListTemplate from \"./components/TodoListTemplate\"\nimport { InputForm,TodoLists } from \"./container\"\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <TodoListTemplate form={\n        <InputForm />}>\n          <TodoLists />\n      </TodoListTemplate>\n    );\n  }\n}\n\nexport default App;\n","import C from '../actions/constants';\r\nimport update from 'react-addons-update';\r\n\r\nexport const form = (input={},action) => {\r\n    switch (action.type){\r\n        case C.EDIT_INPUT:\r\n            return{\r\n                text:action.text,\r\n                bolded:action.bolded,\r\n                color:action.color,\r\n                formState:action.formState,\r\n                id:action.id\r\n            }\r\n        case C.ADD_STATE:\r\n            return{\r\n                text:\"\",\r\n                bolded:false,\r\n                color:\"color1\",\r\n                formState:\"add\",\r\n                id:-1\r\n            }\r\n        case C.EDIT_STATE:\r\n            return{\r\n                text:action.text,\r\n                bolded:action.bolded,\r\n                color:action.color,\r\n                formState:\"edit\",\r\n                id:action.id\r\n            }\r\n        default :\r\n            return input\r\n    }\r\n}\r\n\r\n\r\nexport const list = (list={},action) => {\r\n    switch (action.type) {\r\n        case C.ADD_LIST:\r\n            return{\r\n                id:action.id,\r\n                text:action.text,\r\n                bolded:action.bolded,\r\n                color:action.color,\r\n                timestamp:action.timestamp\r\n            }\r\n        case C.EDIT_LIST:\r\n            return (list.id !== action.id) ? \r\n                list :\r\n                {\r\n                    ...list,\r\n                    text:action.text,\r\n                    checked:action.checked,\r\n                    bolded:action.bolded,\r\n                    color:action.color,\r\n                    timestamp:action.timestamp\r\n                }\r\n        case C.CHECK_TOGGLE_LIST:\r\n            return (list.id !== action.id) ? \r\n            list :\r\n            {\r\n                ...list,\r\n                checked:action.checked\r\n            }\r\n        default :\r\n            return list\r\n    }\r\n}\r\n\r\nexport const lists = (lists=[],action) => {\r\n    switch (action.type){\r\n        case C.ADD_LIST :\r\n            return update(\r\n                lists,{$push:[list({},action)]}\r\n            )\r\n        case C.CHECK_TOGGLE_LIST :\r\n            return lists.map(\r\n                todo => list(todo,action)\r\n            )\r\n        case C.EDIT_LIST :\r\n            return lists.map(\r\n                todo => list(todo,action)\r\n            )\r\n        case C.REMOVE_LIST :\r\n            return [...lists].filter(\r\n                list => list.id !== action.id\r\n            ).map((list,i) => {\r\n                list.id = i;\r\n                return list;\r\n            })\r\n        case C.REALIGN_LIST :\r\n            const getFirst = lists.findIndex(list => list.id === action.fId);\r\n            const getLast = lists.findIndex(list => list.id === action.lId);\r\n            const selectFrom = lists[getFirst];\r\n            const newList = [...lists];\r\n            newList.splice(getFirst,1); //잘라서\r\n            newList.splice(getLast,0,selectFrom); //붙인다\r\n            return newList.map((list,i) => {\r\n                list.id = i;\r\n                return list;\r\n            })\r\n        default:\r\n            return lists\r\n    }\r\n}\r\n\r\nexport const realignmentMode = (realignmentMode={},action) => {\r\n    switch (action.type) {\r\n        case C.REALIGN_MODE :\r\n            return {\r\n                modeState:action.modeState,\r\n                fId:-1,\r\n                lId:-1\r\n            }\r\n        case C.REALIGN_GET_FID :\r\n            return {\r\n                modeState:true,\r\n                fId:action.fId,\r\n                lId:-1\r\n            }\r\n        default :\r\n            return realignmentMode\r\n    }\r\n}\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { form, lists, realignmentMode } from \"./reducers\"\r\nimport stateData from \"./initialState.json\"\r\n\r\nconst logger = store => next => action => {\r\n    console.groupCollapsed(\"dispatching\", action.type);\r\n    console.log(\"prev state\", store.getState());\r\n    console.log(\"action\", action);\r\n    let result = next(action);\r\n    console.log(\"next state\",store.getState());\r\n    console.groupEnd();\r\n    return result;\r\n}\r\n\r\nconst saver = store => next => action => {\r\n    let result = next(action);\r\n    localStorage[\"redux-store\"] = JSON.stringify(store.getState());\r\n    return result;\r\n}\r\n\r\nconst storeFactory = (initialState=stateData) =>\r\n    applyMiddleware(logger, saver)(createStore)(\r\n        combineReducers({form, lists, realignmentMode}),\r\n        (localStorage[\"redux-store\"]) ?\r\n        JSON.parse(localStorage[\"redux-store\"]) :\r\n        initialState\r\n    )\r\n\r\nexport default storeFactory;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\nimport { Provider } from 'react-redux';\nimport storeFactory from './store';\nconst store = storeFactory();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\n"],"sourceRoot":""}